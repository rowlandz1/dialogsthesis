TO DO

1) Clean up document using style in the link I sent you.

Current state of affairs

Model 1: Rewrite rule based

Haskell rewrite rules with (W w/o up arrow) and with the other operations; Dialog represented as a datatype

Model 2a: Stack-based Scheme

Scheme stack based with (W w/ up arrow), but without the other operations;
Dialog represented as a lambda expression

Model 2b: Stack-based Haskell

Haskell stack based with (W w/ up arrow), but without the other operations;
Dialog represented as a datatype

Replace Model 2b with formal semantics model

Model 3a: Defined W and up arrow in Go (Zachary's preference)

Model 3b: Defined W and up arrow in Elixir

Add other dialog operators to Model 3(a or b)
   - Models 2(a and b)

Run with hardcoded input for combo: [a, [b,c], d]

Build recursive function to creating process tree

Unhardcode input

2 CASE STUDIES

LIT REVIEW (COMPARISON)

